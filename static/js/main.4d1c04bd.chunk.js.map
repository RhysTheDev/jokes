{"version":3,"sources":["components/JokeForm.js","services/jokes.js","App.js","index.js"],"names":["JokeForm","joke","getNewJoke","useState","punchlineVisible","setPunchlineVisible","Media","Body","setup","href","onClick","punchline","Button","variant","icon","faSyncAlt","axios","get","then","response","data","App","setJoke","nextJoke","setNextJoke","useEffect","jokeService","resultJoke","Container","Row","Col","ReactDOM","render","document","getElementById"],"mappings":"gSA2BeA,EAtBE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACSC,oBAAS,GADlB,mBAChCC,EADgC,KACdC,EADc,KAOvC,OACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAMC,KAAP,KACI,4BAAKN,EAAKO,OACtB,uBAAGC,KAAK,IAAIC,QAAS,WAPjBL,GAOqCD,KAAoBA,EAAmB,OAAS,OAAzF,iBAEY,4BAAKA,EAAmBH,EAAKU,UAAY,KAE7C,kBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOH,QAAS,kBAAMR,MAClC,kBAAC,IAAD,CAAiBY,KAAMC,S,iBCNxB,EAZO,WAElB,OADgBC,IAAMC,IAAN,UAHJ,uCAGI,iBACDC,MAAK,SAACC,GAMjB,MALa,CACTX,MAAOW,EAASC,KAAKZ,MACrBG,UAAWQ,EAASC,KAAKT,eCuBtBU,G,MAzBH,WAAO,IAAD,EACQlB,mBAAS,IADjB,mBACTF,EADS,KACHqB,EADG,OAEgBnB,mBAAS,GAFzB,mBAEToB,EAFS,KAECC,EAFD,KAchB,OANAC,qBAAU,WACRC,IAA4BR,MAAK,SAACS,GAChCL,EAAQK,QAET,CAACJ,IAGF,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAU7B,KAAMA,EAAMC,WAdX,WACjBsB,GAAY,SAAAD,GAAQ,OAAIA,EAAW,a,MCLvCQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4d1c04bd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Media, Button } from 'react-bootstrap'\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst JokeForm = ({ joke, getNewJoke }) => {\r\n    const [punchlineVisible, setPunchlineVisible] = useState(false);\r\n\r\n    const showPunchline = (shouldShowPunchline) => {\r\n        setPunchlineVisible(!shouldShowPunchline);\r\n    }\r\n\r\n    return (\r\n        <Media>\r\n            <Media.Body>\r\n                <h4>{joke.setup}</h4>\r\n    <a href=\"#\" onClick={() => showPunchline(punchlineVisible)}>{punchlineVisible ? 'Hide' : 'Show'} Punchline...</a>\r\n\r\n                <h5>{punchlineVisible ? joke.punchline : ''}</h5>\r\n            </Media.Body>\r\n            <Button variant=\"info\" onClick={() => getNewJoke()}>\r\n                <FontAwesomeIcon icon={faSyncAlt} />\r\n            </Button>\r\n        </Media>\r\n    );\r\n}\r\n\r\nexport default JokeForm","import axios from 'axios'\r\nconst baseUrl = 'http://official-joke-api.appspot.com'\r\n\r\nconst getRandomJoke = () => {\r\n    const request = axios.get(`${baseUrl}/random_joke`)\r\n    return request.then((response) => {\r\n        const joke = {\r\n            setup: response.data.setup,\r\n            punchline: response.data.punchline\r\n        };\r\n        \r\n        return joke;\r\n    })\r\n}\r\n\r\nexport default {\r\n    getRandomJoke\r\n}","import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport JokeForm from './components/JokeForm'\nimport jokeService from './services/jokes'\nimport './App.css';\n\nconst App = () => {\n  const [joke, setJoke] = useState([]);\n  const [nextJoke, setNextJoke] = useState(0);\n\n  const getNewJoke = () => {\n    setNextJoke(nextJoke => nextJoke + 1)\n  }\n\n  useEffect(() => {\n    jokeService.getRandomJoke().then((resultJoke) => {\n      setJoke(resultJoke)\n    })\n  }, [nextJoke])\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <JokeForm joke={joke} getNewJoke={getNewJoke} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}